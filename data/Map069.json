{
"autoplayBgm":false,"autoplayBgs":false,"battleback1Name":"","battleback2Name":"","bgm":{"name":"","pan":0,"pitch":100,"volume":90},"bgs":{"name":"","pan":0,"pitch":100,"volume":90},"disableDashing":false,"displayName":"","encounterList":[],"encounterStep":30,"height":25,"note":"","parallaxLoopX":false,"parallaxLoopY":false,"parallaxName":"","parallaxShow":true,"parallaxSx":0,"parallaxSy":0,"scrollType":0,"specifyBattleback":false,"tilesetId":12,"width":40,
"data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6787,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6775,6785,6785,6785,6785,6785,6785,6785,6789,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6784,6370,6370,6370,6370,6370,6370,6370,6370,6370,6370,6784,6370,6370,6370,6370,6370,6370,6370,6784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6784,6368,6368,6368,6368,6368,6368,6368,6368,6368,6368,6784,6368,6368,6368,6368,6368,6368,6368,6784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6784,6376,6376,6376,6376,6376,6376,6376,6376,6376,6376,6784,6376,6376,6376,6376,6376,6376,6376,6784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6784,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6784,1587,1587,1587,1587,1587,1587,1587,6784,0,0,0,0,0,6787,6785,6785,6785,6785,6775,6785,6785,6775,6785,6785,6785,6785,6785,6785,6779,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6784,1587,1587,1587,1587,1587,1587,1587,6784,0,0,0,0,0,6784,6370,6370,6370,6370,6796,6370,6370,6784,6370,6370,6370,6370,6370,6374,6784,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6784,1587,1587,1587,1587,1587,1587,1587,6784,0,0,0,0,0,6784,6368,6368,6368,6368,6375,6368,6368,6784,6368,6368,6368,6368,6368,6372,6784,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6784,1587,1587,1587,1587,1587,1587,1587,6784,0,0,0,0,0,6784,6376,6376,6376,6376,6373,6376,6376,6784,6376,6376,6376,6376,6376,6376,6793,6785,6785,6785,6785,6785,6785,6785,6797,1587,1587,6784,1587,1587,1587,1587,1587,1587,1587,6784,0,0,0,0,0,6784,1587,1587,1587,1587,6381,1587,1587,6784,1587,1587,1587,1587,1587,1587,6371,6370,6370,6370,6370,6370,6370,6370,6374,1587,1587,6784,1587,1587,1587,1587,1587,1587,1587,6784,0,0,0,0,0,6784,1587,1587,1587,1587,1587,1587,1587,6784,1587,1587,1587,1587,1587,1587,6369,6368,6368,6368,6368,6368,6368,6368,6368,1587,1587,6784,1587,1587,1587,1587,1587,1587,1587,6784,0,0,0,0,0,6784,1587,6795,6785,6785,6785,6785,6785,6779,1587,1587,1587,1587,1587,1587,6377,6376,6376,6376,6376,6376,6380,6283,6286,1587,1587,6784,1587,1587,1587,1587,1587,1587,1587,6784,0,0,0,0,0,6784,1587,6371,6370,6370,6370,6370,6370,6784,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1585,1585,1587,1587,6793,6785,6797,1587,1587,6787,6785,6785,6779,0,0,0,0,0,6784,1587,6369,6368,6368,6368,6368,6368,6784,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6371,6370,6374,1587,1587,6784,6371,6370,6784,0,0,0,0,0,6784,1587,6377,6376,6376,6376,6376,6376,6784,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6369,6368,6372,1587,1587,6784,6369,6368,6784,0,0,0,0,0,6784,1587,1587,1587,1587,1587,1587,1587,6784,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6377,6376,6380,1587,1587,6784,6376,6376,6784,0,0,0,0,0,6784,1587,1587,1587,1587,1587,1587,1587,6784,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6784,1587,1587,6784,0,0,0,0,0,6771,6785,6797,1587,6795,6785,6785,6785,6791,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6793,6797,1587,6784,0,0,0,0,0,6784,6370,6374,1587,6371,6370,6370,6370,6374,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6371,6374,1587,6784,0,0,0,0,0,6784,6368,6372,1587,6369,6368,6368,6368,6372,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6369,6372,1587,6784,0,0,0,0,0,6784,6376,6380,1587,6377,6376,6376,6376,6380,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6377,6380,1587,6784,0,0,0,0,0,6784,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,6784,0,0,0,0,0,6793,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6785,6791,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,243,0,243,0,243,0,243,0,0,250,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,243,0,243,0,243,0,243,0,0,0,0,243,244,243,244,0,0,250,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,243,244,243,244,0,0,250,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,243,244,243,244,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,156,0,0,0,0,0,0,0,0,0,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,181,0,0,181,181,181,181,181,181,181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,244,130,244,130,244,130,244,189,131,0,189,189,189,189,189,189,189,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,0,153,0,153,0,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,78,0,0,0,0,0,0,0,0,129,244,129,244,129,244,129,244,0,0,0,129,132,129,132,0,249,131,0,0,0,0,0,0,0,26,26,26,26,139,163,86,0,0,0,0,0,0,0,0,153,0,153,0,153,0,153,0,0,0,0,153,0,153,0,0,0,0,0,0,0,0,0,0,0,162,162,162,162,319,171,161,0,0,0,293,708,293,0,0,0,0,0,0,0,0,0,0,0,0,0,129,132,129,132,0,249,131,0,0,0,0,0,0,0,170,170,170,170,0,0,169,0,0,0,301,0,301,0,0,0,0,0,0,0,0,0,0,0,0,0,153,0,153,0,0,0,179,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,319,0,319,0,319,0,319,0,0,0,0,129,132,129,132,0,0,187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,293,0,0,0,0,0,293,211,211,0,0,0,153,0,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,301,0,0,0,0,0,301,219,219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,163,0,163,0,163,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,0,171,0,171,0,0,0,0,293,0,0,0,0,0,0,0,0,0,293,0,0,0,0,319,0,0,0,0,319,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,301,0,0,0,0,0,0,0,0,0,301,0,0,0,0,0,293,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,0,167,0,149,0,148,0,167,0,149,0,0,0,0,0,301,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,293,0,175,0,157,0,156,0,175,0,293,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,301,0,0,0,0,0,0,0,0,0,301,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,319,0,319,0,293,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,293,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,301,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,301,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,5,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
"events":[
null,
{"id":1,"name":"EV001","note":"","pages":[{"conditions":{"actorId":1,"actorValid":false,"itemId":1,"itemValid":false,"selfSwitchCh":"A","selfSwitchValid":false,"switch1Id":1,"switch1Valid":false,"switch2Id":1,"switch2Valid":false,"variableId":1,"variableValid":false,"variableValue":0},"directionFix":false,"image":{"characterIndex":0,"characterName":"","direction":2,"pattern":0,"tileId":0},"list":[{"code":250,"indent":0,"parameters":[{"name":"Move1","pan":0,"pitch":100,"volume":90}]},{"code":201,"indent":0,"parameters":[0,77,18,5,0,0]},{"code":0,"indent":0,"parameters":[]}],"moveFrequency":3,"moveRoute":{"list":[{"code":0,"parameters":[]}],"repeat":true,"skippable":false,"wait":false},"moveSpeed":3,"moveType":0,"priorityType":0,"stepAnime":false,"through":false,"trigger":1,"walkAnime":true}],"x":34,"y":17},
{"id":2,"name":"EV002","note":"","pages":[{"conditions":{"actorId":1,"actorValid":false,"itemId":1,"itemValid":false,"selfSwitchCh":"A","selfSwitchValid":false,"switch1Id":1,"switch1Valid":false,"switch2Id":1,"switch2Valid":false,"variableId":1,"variableValid":false,"variableValue":0},"directionFix":false,"image":{"characterIndex":4,"characterName":"!SF_Door2","direction":2,"pattern":1,"tileId":0},"list":[{"code":250,"indent":0,"parameters":[{"name":"Open1","pan":0,"pitch":100,"volume":90}]},{"code":205,"indent":0,"parameters":[0,{"list":[{"code":17},{"code":15,"parameters":[3]},{"code":18},{"code":15,"parameters":[3]},{"code":19},{"code":37},{"code":0}],"repeat":false,"skippable":false,"wait":true}]},{"code":505,"indent":0,"parameters":[{"code":17}]},{"code":505,"indent":0,"parameters":[{"code":15,"parameters":[3]}]},{"code":505,"indent":0,"parameters":[{"code":18}]},{"code":505,"indent":0,"parameters":[{"code":15,"parameters":[3]}]},{"code":505,"indent":0,"parameters":[{"code":19}]},{"code":505,"indent":0,"parameters":[{"code":37}]},{"code":205,"indent":0,"parameters":[-1,{"list":[{"code":12},{"code":0}],"repeat":false,"skippable":true,"wait":true}]},{"code":505,"indent":0,"parameters":[{"code":12}]},{"code":250,"indent":0,"parameters":[{"name":"Move1","pan":0,"pitch":100,"volume":90}]},{"code":201,"indent":0,"parameters":[0,116,14,9,0,0]},{"code":0,"indent":0,"parameters":[]}],"moveFrequency":3,"moveRoute":{"list":[{"code":0,"parameters":[]}],"repeat":true,"skippable":false,"wait":false},"moveSpeed":3,"moveType":0,"priorityType":1,"stepAnime":false,"through":false,"trigger":1,"walkAnime":false}],"x":14,"y":9},
{"id":3,"name":"EV003","note":"","pages":[{"conditions":{"actorId":1,"actorValid":false,"itemId":1,"itemValid":false,"selfSwitchCh":"A","selfSwitchValid":false,"switch1Id":1,"switch1Valid":false,"switch2Id":1,"switch2Valid":false,"variableId":1,"variableValid":false,"variableValue":0},"directionFix":false,"image":{"tileId":0,"characterName":"Archivia NPC","direction":8,"pattern":1,"characterIndex":0},"list":[{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Jake:"]},{"code":401,"indent":0,"parameters":["C++ program consists of various structures "]},{"code":401,"indent":0,"parameters":["that work together to perform specific "]},{"code":401,"indent":0,"parameters":["tasks."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Header Files: These files contain "]},{"code":401,"indent":0,"parameters":["declarations and definitions of classes, "]},{"code":401,"indent":0,"parameters":["functions, and variables that are used in "]},{"code":401,"indent":0,"parameters":["the program."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["They are included at the beginning of the "]},{"code":401,"indent":0,"parameters":["program using the \"#include\" directive."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Main Function: Every C++ program has a "]},{"code":401,"indent":0,"parameters":["main() function. It serves as the entry "]},{"code":401,"indent":0,"parameters":["point of the program, and the execution "]},{"code":401,"indent":0,"parameters":["starts from here. "]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["The main function usually contains the program's "]},{"code":401,"indent":0,"parameters":["logic and controls the flow of execution."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Variables: Variables are used to store data "]},{"code":401,"indent":0,"parameters":["during program execution. They have a "]},{"code":401,"indent":0,"parameters":["specific type (e.g., int, float, string) "]},{"code":401,"indent":0,"parameters":["and a name."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Variables can be declared and initialized "]},{"code":401,"indent":0,"parameters":["to hold values that can be modified or used "]},{"code":401,"indent":0,"parameters":["in calculations."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Functions: Functions are blocks of code "]},{"code":401,"indent":0,"parameters":["that perform specific tasks. They can take "]},{"code":401,"indent":0,"parameters":["input parameters and return values."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Functions help modularize the program and "]},{"code":401,"indent":0,"parameters":["make it more organized and reusable."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Control Structures: Control structures "]},{"code":401,"indent":0,"parameters":["allow you to control the flow of execution "]},{"code":401,"indent":0,"parameters":["in a program. Common control structures "]},{"code":401,"indent":0,"parameters":["include conditional statements (if, else "]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["if, else), loops (for, while, do-while), "]},{"code":401,"indent":0,"parameters":["and switch statements. They help make "]},{"code":401,"indent":0,"parameters":["decisions and repeat tasks based on certain "]},{"code":401,"indent":0,"parameters":["conditions."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Classes and Objects: C++ is an object-"]},{"code":401,"indent":0,"parameters":["oriented programming language, and classes "]},{"code":401,"indent":0,"parameters":["are the building blocks of objects."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["A class is a blueprint for creating objects "]},{"code":401,"indent":0,"parameters":["that encapsulate data and behavior. "]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Objects are instances of a class, and they "]},{"code":401,"indent":0,"parameters":["interact with each other by calling member "]},{"code":401,"indent":0,"parameters":["functions and accessing member variables."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Libraries: C++ provides a vast collection "]},{"code":401,"indent":0,"parameters":["of libraries that contain prewritten code "]},{"code":401,"indent":0,"parameters":["to perform specific tasks. "]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["Libraries can be included in a program "]},{"code":401,"indent":0,"parameters":["using the #include directive."]},{"code":101,"indent":0,"parameters":["Archivia NPC",0,0,2]},{"code":401,"indent":0,"parameters":["They provide ready-to-use functionality for "]},{"code":401,"indent":0,"parameters":["various purposes, such as mathematical "]},{"code":401,"indent":0,"parameters":["calculations, input/output operations, "]},{"code":401,"indent":0,"parameters":["and more."]},{"code":0,"indent":0,"parameters":[]}],"moveFrequency":3,"moveRoute":{"list":[{"code":0,"parameters":[]}],"repeat":true,"skippable":false,"wait":false},"moveSpeed":3,"moveType":0,"priorityType":1,"stepAnime":false,"through":false,"trigger":0,"walkAnime":true}],"x":32,"y":8},
{"id":4,"name":"EV004","note":"","pages":[{"conditions":{"actorId":1,"actorValid":false,"itemId":1,"itemValid":false,"selfSwitchCh":"A","selfSwitchValid":false,"switch1Id":1,"switch1Valid":false,"switch2Id":1,"switch2Valid":false,"variableId":1,"variableValid":false,"variableValue":0},"directionFix":false,"image":{"tileId":0,"characterName":"Archivia NPC","direction":8,"pattern":1,"characterIndex":2},"list":[{"code":101,"indent":0,"parameters":["Archivia NPC",2,0,2]},{"code":401,"indent":0,"parameters":["Archi:"]},{"code":401,"indent":0,"parameters":["Variables in a C++ program are like "]},{"code":401,"indent":0,"parameters":["containers that hold data."]},{"code":101,"indent":0,"parameters":["Archivia NPC",2,0,2]},{"code":401,"indent":0,"parameters":["Each variable has a specific type that "]},{"code":401,"indent":0,"parameters":["determines the kind of data it can store."]},{"code":101,"indent":0,"parameters":["Archivia NPC",2,0,2]},{"code":401,"indent":0,"parameters":["Integer: An integer data type (int) "]},{"code":401,"indent":0,"parameters":["represents whole numbers without decimal "]},{"code":401,"indent":0,"parameters":["points. "]},{"code":101,"indent":0,"parameters":["Archivia NPC",2,0,2]},{"code":401,"indent":0,"parameters":["Floating-Point: Floating-point data types "]},{"code":401,"indent":0,"parameters":["(float, double) represent numbers with "]},{"code":401,"indent":0,"parameters":["decimal points."]},{"code":101,"indent":0,"parameters":["Archivia NPC",2,0,2]},{"code":401,"indent":0,"parameters":["Character: The character data type (char) "]},{"code":401,"indent":0,"parameters":["represents single characters, such as "]},{"code":401,"indent":0,"parameters":["letters, digits, or symbols."]},{"code":101,"indent":0,"parameters":["Archivia NPC",2,0,2]},{"code":401,"indent":0,"parameters":["Boolean: The Boolean data type (bool) "]},{"code":401,"indent":0,"parameters":["represents logical values that can be "]},{"code":401,"indent":0,"parameters":["either true or false."]},{"code":101,"indent":0,"parameters":["Archivia NPC",2,0,2]},{"code":401,"indent":0,"parameters":["String: The string data type (std::string) "]},{"code":401,"indent":0,"parameters":["represents a sequence of characters."]},{"code":101,"indent":0,"parameters":["Archivia NPC",2,0,2]},{"code":401,"indent":0,"parameters":["It is used to store text or a combination "]},{"code":401,"indent":0,"parameters":["of letters, digits, and symbols. Strings "]},{"code":401,"indent":0,"parameters":["are handy for working with words, "]},{"code":401,"indent":0,"parameters":["sentences, or any other textual data."]},{"code":0,"indent":0,"parameters":[]}],"moveFrequency":3,"moveRoute":{"list":[{"code":0,"parameters":[]}],"repeat":true,"skippable":false,"wait":false},"moveSpeed":3,"moveType":0,"priorityType":1,"stepAnime":false,"through":false,"trigger":0,"walkAnime":true}],"x":35,"y":8},
{"id":5,"name":"EV005","note":"","pages":[{"conditions":{"actorId":1,"actorValid":false,"itemId":1,"itemValid":false,"selfSwitchCh":"A","selfSwitchValid":false,"switch1Id":1,"switch1Valid":false,"switch2Id":1,"switch2Valid":false,"variableId":1,"variableValid":false,"variableValue":0},"directionFix":false,"image":{"tileId":0,"characterName":"Archivia NPC","direction":2,"pattern":1,"characterIndex":5},"list":[{"code":101,"indent":0,"parameters":["Archivia NPC",5,0,2]},{"code":401,"indent":0,"parameters":["Hakob:"]},{"code":401,"indent":0,"parameters":["Printing outputs in a C++ program refers "]},{"code":401,"indent":0,"parameters":["to displaying information or results to "]},{"code":401,"indent":0,"parameters":["the user on the console or output stream."]},{"code":101,"indent":0,"parameters":["Archivia NPC",5,0,2]},{"code":401,"indent":0,"parameters":["It allows the program to communicate and "]},{"code":401,"indent":0,"parameters":["share data or messages with the user."]},{"code":101,"indent":0,"parameters":["Archivia NPC",5,0,2]},{"code":401,"indent":0,"parameters":["Using \"std::cout\" C++ provides a standard "]},{"code":401,"indent":0,"parameters":["output stream object called std::cout. You "]},{"code":401,"indent":0,"parameters":["can use std::cout to display output on the "]},{"code":401,"indent":0,"parameters":["console. "]},{"code":101,"indent":0,"parameters":["Archivia NPC",5,0,2]},{"code":401,"indent":0,"parameters":["To print a value or message, you use the "]},{"code":401,"indent":0,"parameters":["<< operator."]},{"code":101,"indent":0,"parameters":["Archivia NPC",5,0,2]},{"code":401,"indent":0,"parameters":["For example:"]},{"code":401,"indent":0,"parameters":["int age = 25;"]},{"code":401,"indent":0,"parameters":["std::cout<<\"Your age is: \"<<age<<std::endl;"]},{"code":101,"indent":0,"parameters":["Archivia NPC",5,0,2]},{"code":401,"indent":0,"parameters":["In this example, the program displays the "]},{"code":401,"indent":0,"parameters":["message \"Your age is: \" followed by the "]},{"code":401,"indent":0,"parameters":["value stored in the age variable."]},{"code":101,"indent":0,"parameters":["Archivia NPC",5,0,2]},{"code":401,"indent":0,"parameters":["You can print the values of variables by "]},{"code":401,"indent":0,"parameters":["including them in the std::cout statements. "]},{"code":101,"indent":0,"parameters":["Archivia NPC",5,0,2]},{"code":401,"indent":0,"parameters":["This allows you to display the current "]},{"code":401,"indent":0,"parameters":["state of variables or the results of "]},{"code":401,"indent":0,"parameters":["calculations."]},{"code":0,"indent":0,"parameters":[]}],"moveFrequency":3,"moveRoute":{"list":[{"code":0,"parameters":[]}],"repeat":true,"skippable":false,"wait":false},"moveSpeed":3,"moveType":0,"priorityType":1,"stepAnime":false,"through":false,"trigger":0,"walkAnime":true}],"x":26,"y":6}
]
}